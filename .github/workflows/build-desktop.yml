
name: Build Desktop Apps

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      
      - name: Clear npm cache
        run: npm cache clean --force
      
      - name: Create icons directory and placeholder files
        run: |
          mkdir -p public/icons
          echo "Creating placeholder icon files for build"
          # Create minimal placeholder files
          touch public/icons/icon.png
          touch public/icons/icon.icns
          touch public/icons/icon.ico
        shell: bash
      
      - name: Install dependencies
        run: npm install --no-audit --no-fund
      
      - name: Build web application for Electron
        run: npm run build
        env:
          NODE_OPTIONS: '--max-old-space-size=4096'
          ELECTRON: 'true'
      
      - name: Install Electron dependencies
        run: npm install electron electron-builder --save-dev
      
      - name: Build Electron app (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npx electron-builder --linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build Electron app (Windows)
        if: matrix.os == 'windows-latest'
        run: npx electron-builder --win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build Electron app (macOS)
        if: matrix.os == 'macos-latest'
        run: npx electron-builder --mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false
      
      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            dist-electron/*.AppImage
            dist-electron/*.deb
            dist-electron/*.rpm
          retention-days: 7
      
      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            dist-electron/*.exe
          retention-days: 7
      
      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: |
            dist-electron/*.dmg
            dist-electron/*.zip
          retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            linux-build/*
            windows-build/*
            macos-build/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
